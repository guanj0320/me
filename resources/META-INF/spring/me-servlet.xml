<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="
           http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-3.2.xsd
           http://www.springframework.org/schema/mvc
           http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd">

    <!-- 启动扫描所有的controller，只要是base-package下的类用到注释都可以被解析 -->
    <context:component-scan base-package="me.guanjun.web"/>

    <!--  主要作用于@Controller，激活该模式

        下面是一种简写形式，完全可以手动配置替代这种简写形式；
         它会自动注册DefaultAnnotationHandlerMapping与AnnotationMethodHandlerAdapter 两个bean,
           是spring MVC为@Controllers分发请求所必须的
     -->
    <mvc:annotation-driven>
        <!-- 消息转换器 -->
        <mvc:message-converters register-defaults="true">
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <property name="supportedMediaTypes" value="text/html;charset=UTF-8"/>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>
    <!-- 这里拦截器还有一种配置方法【针对路径进行配置】 推荐使用这个，方便直观-->
    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/admin/*"/>
            <bean  class="me.guanjun.web.interceptor.MyInterceptor"></bean>
        </mvc:interceptor>
        <mvc:interceptor><!-- 用户session是否丢失检验 -->
            <mvc:mapping path="/admin/**"/>
            <mvc:exclude-mapping path="/admin/login"/>
            <mvc:exclude-mapping path="/admin/logon"/>
            <mvc:exclude-mapping path="/admin/code"/>
            <bean class="me.guanjun.web.interceptor.SessionInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>

    <!-- 全局配置
    <mvc:interceptors>
        <bean class="com.aokunsang.web.interceptor.MyInterceptor"></bean>
    </mvc:interceptors>
    -->
    <!-- 对静态资源文件的访问  方案一 （二选一） -->
    <!--<mvc:default-servlet-handler/>-->

    <!-- 对静态资源文件的访问  方案二 （二选一）-->
    <!-- 配置js，css等静态文件直接映射到对应的文件夹，不被DispatcherServlet处理
    mapping - 访问地址
    location - WebRoot里面的静态文件位置目录
    -->
    <mvc:resources mapping="/resources/**" location="/WEB-INF/resources/" cache-period="31556926"/>
    <mvc:resources mapping="/ueditor/**" location="/ueditor/" cache-period="31556926"/>
    <mvc:resources mapping="/umeditor/**" location="/umeditor/" cache-period="31556926"/>
    <mvc:resources mapping="/scale_drawing/**" location="/WEB-INF/uploads/scale_drawing/" cache-period="31556926"/>
    <mvc:resources mapping="/banner/**" location="/WEB-INF/uploads/banner/" cache-period="31556926"/>
    <mvc:resources mapping="/photos/**" location="/WEB-INF/uploads/photos/" cache-period="31556926"/>
    <mvc:resources mapping="/albums/**" location="/WEB-INF/uploads/albums/" cache-period="31556926"/>

    <!--
       配置/WEB-INF/views/目录里面的jsp文件不被DispatcherServlet处理，可以直接通过浏览器访问。
       view-name - /WEB-INF/views/里面的jsp文件名(不许后缀即可)
       path -  访问地址
    -->
    <mvc:view-controller path="/" view-name="index"/>

    <!-- jsp页面解析器，当Controller返回XXX字符串时，先通过拦截器，然后该类就会在/WEB-INF/views/目录下，查找XXX.jsp文件-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/views/"></property>
        <property name="suffix" value=".jsp"></property>
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
    </bean>

    <!--定义异常处理页面
    只要发生了Exception异常，就会自动跳转到WEB-INF/views/ex/exception.jsp页面
    -->
    <bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <property name="exceptionMappings">
            <props>
                <prop key="java.lang.NullPointerException">ex/nullexception</prop>
            </props>
        </property>
    </bean>

    <bean id="multipartResolver"  class="org.springframework.web.multipart.commons.CommonsMultipartResolver"/>
</beans>